# Personal Zsh configuration file. It is strongly recommended to keep all
# shell customization and configuration (including exported environment
# variables such as PATH) in this file or in files sourced from it.
#
# Documentation: https://github.com/romkatv/zsh4humans/blob/v5/README.md.

# Periodic auto-update on Zsh startup: 'ask' or 'no'.
# You can manually run `z4h update` to update everything.
zstyle ':z4h:' auto-update      'no'
# Ask whether to auto-update this often; has no effect if auto-update is 'no'.
zstyle ':z4h:' auto-update-days '28'

# Keyboard type: 'mac' or 'pc'.
zstyle ':z4h:bindkey' keyboard  'mac'

# Start tmux if not already in tmux.
zstyle ':z4h:' start-tmux command tmux -u new -A -D -t z4h

# Whether to move prompt to the bottom when zsh starts and on Ctrl+L.
zstyle ':z4h:' prompt-at-bottom 'no'

# Mark up shell's output with semantic information.
zstyle ':z4h:' term-shell-integration 'yes'

# Right-arrow key accepts one character ('partial-accept') from
# command autosuggestions or the whole thing ('accept')?
zstyle ':z4h:autosuggestions' forward-char 'accept'

# Recursively traverse directories when TAB-completing files.
zstyle ':z4h:fzf-complete' recurse-dirs 'yes'

# Accept the selection and re-open fzf straight away
zstyle ':z4h:fzf-complete' fzf-bindings tab:repeat

# Enable direnv to automatically source .envrc files.
zstyle ':z4h:direnv'         enable 'no'
# Show "loading" and "unloading" notifications from direnv.
zstyle ':z4h:direnv:success' notify 'yes'

# Enable ('yes') or disable ('no') automatic teleportation of z4h over
# SSH when connecting to these hosts.
zstyle ':z4h:ssh:example-hostname1'   enable 'yes'
zstyle ':z4h:ssh:*.example-hostname2' enable 'no'
# The default value if none of the overrides above match the hostname.
zstyle ':z4h:ssh:*'                   enable 'no'

# Send these files over to the remote host when connecting over SSH to the
# enabled hosts.
zstyle ':z4h:ssh:*' send-extra-files '~/.nanorc' '~/.env.zsh'

# Clone additional Git repositories from GitHub.
#
# This doesn't do anything apart from cloning the repository and keeping it
# up-to-date. Cloned files can be used after `z4h init`. This is just an
# example. If you don't plan to use Oh My Zsh, delete this line.
z4h install ohmyzsh/ohmyzsh || return

# Install or update core components (fzf, zsh-autosuggestions, etc.) and
# initialize Zsh. After this point console I/O is unavailable until Zsh
# is fully initialized. Everything that requires user interaction or can
# perform network I/O must be done above. Everything else is best done below.
z4h init || return

# Use vim key bindings
bindkey -v

# Extend PATH.
path=(~/bin $path)

# Export environment variables.
export GPG_TTY=$TTY

# Source additional local files if they exist.
z4h source ~/.env.zsh

# Use additional Git repositories pulled in with `z4h install`.
#
# This is just an example that you should delete. It does nothing useful.
z4h source ohmyzsh/ohmyzsh/lib/diagnostics.zsh  # source an individual file
z4h load   ohmyzsh/ohmyzsh/plugins/emoji-clock  # load a plugin

# Define key bindings.
z4h bindkey undo Ctrl+/   Shift+Tab  # undo the last command line change
z4h bindkey redo Option+/            # redo the last undone command line change

z4h bindkey z4h-cd-back    Shift+Left   # cd into the previous directory
z4h bindkey z4h-cd-forward Shift+Right  # cd into the next directory
z4h bindkey z4h-cd-up      Shift+Up     # cd into the parent directory
z4h bindkey z4h-cd-down    Shift+Down   # cd into a child directory

# Autoload functions.
autoload -Uz zmv

# Define functions and completions.
function md() { [[ $# == 1 ]] && mkdir -p -- "$1" && cd -- "$1" }
compdef _directories md

# Define named directories: ~w <=> Windows home directory on WSL.
[[ -z $z4h_win_home ]] || hash -d w=$z4h_win_home

# Define aliases.
alias tree='tree -a -I .git'

# Add flags to existing aliases.
alias ls="${aliases[ls]:-ls} -A"

# Set shell options: http://zsh.sourceforge.net/Doc/Release/Options.html.
setopt glob_dots     # no special treatment for file names with a leading dot
setopt no_auto_menu  # require an extra TAB press to open the completion menu

# ---------------------------------------------------------------------------
# My customizations

# Set the list of directories that Zsh searches for programs.
path=(
  $HOME/{,s}bin(N)
  $HOME/.local/share/nvim/mason/bin
  /opt/{homebrew,local}/{,s}bin(N)
  /usr/local/{,s}bin(N)
  $path
  /usr/bin
  /bin
  /usr/sbin
  /sbin
)

EXTRA_PATHS=(
    ${HOME}/bin/dockerized/bin
    /opt/homebrew/opt/ssh-copy-id/bin
    ${HOME}/.local/bin
    /usr/local/opt/coreutils/libexec/gnubin
    /Library/Developer/Toolchains/swift-latest.xctoolchain
    ${HOME}/.cargo/bin
    ${HOME}/.node/bin
    ${GOPATH}/bin
    /usr/local/opt/sqlite/bin
    /Applications/PyCharm.app/Contents/MacOS
)
for EXTRA_PATH in $EXTRA_PATHS; do
  if [[ -d $EXTRA_PATH ]]; then
  path=(
    $EXTRA_PATH
    $path
  )
  fi
done

fpath=(
  ${HOME}/.zfunc
  $fpath
)


export EDITOR='nvim'
export VISUAL='nvim'
export SHELL='/opt/homebrew/bin/zsh'

export FZF_DEFAULT_OPTS=" \
--color=bg+:#313244,bg:#1e1e2e,spinner:#f5e0dc,hl:#f38ba8 \
--color=fg:#cdd6f4,header:#f38ba8,info:#cba6f7,pointer:#f5e0dc \
--color=marker:#f5e0dc,fg+:#cdd6f4,prompt:#cba6f7,hl+:#f38ba8 \
--bind='ctrl-o:execute(vi {})+abort' \
--layout=reverse --border --info=inline \
--margin=2,4 --padding=1 --height=50%"

# Read in API keys
ENV_FILE="${HOME}/.env"
[ -f ${ENV_FILE} ] && source ${ENV_FILE}

AWS_ZSH_COMPLETER="${HOME}/.local/bin/aws_zsh_completer.sh"
[ -f ${AWS_ZSH_COMPLETER} ] && source ${AWS_ZSH_COMPLETER}

ALIASES_LOCAL="${HOME}/.aliases.local"
[ -f ${ALIASES_LOCAL} ] && source ${ALIASES_LOCAL}

GIT_EXTRAS="/opt/homebrew/opt/git-extras/share/git-extras/git-extras-completion.zsh"
[ -f ${GIT_EXTRAS} ] && source ${GIT_EXTRAS}

# Added by OrbStack: command-line tools and integration
if which orbstack > /dev/null; then
    source ~/.orbstack/shell/init.zsh 2>/dev/null
fi

if which assh > /dev/null; then
    alias ssh="assh wrapper ssh"
fi

if which atuin > /dev/null; then
    source "${HOME}/.local/completions/_atuin"
fi

if which zoxide > /dev/null; then
    source "${HOME}/.local/completions/_zoxide"
fi

if which uv > /dev/null; then
    source "${HOME}/.local/completions/_uv"
fi

function gam() { "/Users/johno/bin/gam/gam" "$@" ; }

# Yazi
autoload -Uz yy

# Expands .... to ../..
function expand-dot-to-parent-directory-path {
  if [[ $LBUFFER = *.. ]]; then
    LBUFFER+='/..'
  else
    LBUFFER+='.'
  fi
}
zle -N expand-dot-to-parent-directory-path

# Allow command line editing in an external editor.
autoload -Uz edit-command-line
zle -N edit-command-line

# Key bindings
bindkey -M vicmd '\Ee' edit-command-line
bindkey -M viins '\Eh' run-help
bindkey -M viins '\Eq' push-line-or-edit

bindkey -M viins "^ " glob-alias
bindkey -M viins "^F" vi-forward-word
bindkey -M viins "^E" vi-add-eol
bindkey -M viins "." expand-dot-to-parent-directory-path
