#!/bin/sh
# Switch back to system Ruby/Python before updating
UPDATE_SW_DIR="$HOME/src/update_sw"
CURRENT_DIR=$(pwd)
CURRENT_PYTHON=$(pyenv version | head -n1 | cut -f1 -d' ')
CURRENT_NODE=$(nodenv version | head -n1 | cut -f1 -d' ')
CURRENT_GO=$(go version | awk '{ print $3 }')
echo "*** Active versions [Python: ${CURRENT_PYTHON} / Ruby: ${CURRENT_RUBY} / Node: ${CURRENT_NODE} / Go: ${CURRENT_GO}] ***"
cd "$UPDATE_SW_DIR" || exit
pyenv local 3.5.2
rbenv local system
nodenv local 6.9.1
# Get OS X Software Updates, and update installed Ruby gems, Homebrew, npm, and their installed packages
echo "*** System software"
echo
sudo softwareupdate -i -a
echo "*** App Store programs"
echo
sudo mas outdated
sudo mas upgrade
echo "*** Ruby gems"
echo
sudo gem update --system
sudo gem update
echo "*** Homebrew"
echo
brew doctor
brew update
brew upgrade
brew cleanup
brew prune
echo "*** terraform"
echo
tfenv install $(tfenv list-remote | grep -v 'beta' | grep -v '\-rc' | head -n1)
echo "*** pipsi"
echo
pip install --upgrade pipsi
for pipsi_package in $(pipsi list | grep "Package " | awk "{print $2}" | tr -d '":'); do
    pipsi upgrade "$pipsi_package"
done
echo "*** npm"
echo
npm set progress=false
npm install -g npm@latest
for package in $(npm -g outdated --parseable --depth=0 | cut -d: -f2)
do
    npm -g install "$package"
done
echo "*** Vim bundles"
echo
TERM=xterm-256color vim -u ~/src/dotfiles/bundles.vim +PlugUpdate! +qa
echo "*** zprezto submodules"
echo
cd ~/src/prezto || exit
git submodule update
git submodule foreach git pull origin master --recurse-submodules
echo
echo "Restoring previous Python/Ruby/Node/Go versions"
cd "${CURRENT_DIR}" || exit
pyenv local "${CURRENT_PYTHON}"
rbenv local "${CURRENT_RUBY}"
nodenv local "${CURRENT_NODE}"
gvm use "${CURRENT_GO}" --defuault
