#!/bin/sh
# Switch back to system Ruby/Python before updating
UPDATE_SW_DIR="$HOME/src/update_sw"
CURRENT_DIR=$(pwd)
CURRENT_PYTHON=$(pyenv version | head -n1 | cut -f1 -d' ')
CURRENT_RUBY=$(rbenv version | head -n1 | cut -f1 -d' ')
CURRENT_NODE=$(nodenv version | head -n1 | cut -f1 -d' ')
CURRENT_GO=$(goenv version | head -n1 | cut -f1 -d' ')
INSTALLED_CONFIG=${HOME}/.local/personal_config
mkdir -p ${INSTALLED_CONFIG}
echo "*** Active versions [Python: ${CURRENT_PYTHON} / Ruby: ${CURRENT_RUBY} / Node: ${CURRENT_NODE} / Go: ${CURRENT_GO}] ***"
cd "$UPDATE_SW_DIR" || exit
pyenv local 3.7.4
rbenv local 2.6.4
nodenv local 12.8.0
goenv local 1.13.4
# Get OS X Software Updates, and update installed Ruby gems, Homebrew, npm, and their installed packages
echo "*** System software"
echo
sudo softwareupdate -i -a
echo "*** App Store programs"
echo
sudo mas outdated
sudo mas upgrade
echo "*** Ruby gems"
echo
rbenv rehash
gem list --local > "${INSTALLED_CONFIG}/ruby_gems"
sudo gem update --system
for outdated_gem in $(gem outdated | cut -f1 -d' ' | grep -v 'rdoc'); do
    sudo gem update "${outdated_gem}"
done
echo "*** Homebrew"
echo
brew list --versions > ${INSTALLED_CONFIG}/homebrew_packages
brew doctor
brew update
brew upgrade
brew cleanup
echo "*** Pyenv"
echo
pyenv versions > ${INSTALLED_CONFIG}/pyenv_versions
pyenv rehash
echo "*** Goenv"
echo
goenv versions > ${INSTALLED_CONFIG}/goenv_versions
goenv rehash
echo "*** terraform"
echo
tfenv list > ${INSTALLED_CONFIG}/tfenv_versions
tfenv install "$(tfenv list-remote | egrep -v '(alpha|beta|\-rc)' | head -n1)"
echo "*** pipx"
echo
pipx upgrade pipx
pipx list > ${INSTALLED_CONFIG}/pipx_packages
pipx upgrade-all
echo "*** npm"
echo
nodenv versions > ${INSTALLED_CONFIG}/nodenv_versions
nodenv rehash
npm list > ${INSTALLED_CONFIG}/npm_packages
npm set progress=false
npm install -g npm@latest
for package in $(npm -g outdated --parseable --depth=0 | cut -d: -f2)
do
    npm -g install "$package"
done
echo "*** Vim bundles"
echo
TERM=xterm-256color vim +PlugUpdate! +qa
echo "*** zprezto submodules"
echo
cd ~/src/prezto || exit
git submodule update
git submodule foreach git pull origin master --recurse-submodules
echo
echo "Restoring previous Python/Ruby/Node/Go versions"
cd "${CURRENT_DIR}" || exit
pyenv local "${CURRENT_PYTHON}"
rbenv local "${CURRENT_RUBY}"
nodenv local "${CURRENT_NODE}"
goenv local "${CURRENT_GO}"
